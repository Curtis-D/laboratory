{\rtf1\ansi\ansicpg1252\cocoartf1038\cocoasubrtf290
{\fonttbl\f0\fnil\fcharset0 Monaco;\f1\froman\fcharset0 Times-Roman;}
{\colortbl;\red255\green255\blue255;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\f0\fs18 \cf0 // using Mix 16 layer 1\
x = TouchOSC.new(s, "Mix 16");\
\
x = TouchOSC.new(s, "Beatmachine", 1);\
\
\
\pard\pardeftab720\sa240\ql\qnatural

\f1\fs24 \cf0 //n = NetAddr("192.168.1.100", 9000);\
n = NetAddr("192.168.1.100", 57120);\
x.setIP(n);\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\f0\fs18 \cf0 x.send(0, 1);\
\
\
\pard\pardeftab720\sa240\ql\qnatural

\f1\fs24 \cf0 // receive accelerometer input\
x.accelerometer(1);\
\
// stop receiving\
x.accelerometer(0);\
\
\
\pard\pardeftab720\sa240\ql\qnatural

\b \cf0 accelX
\b0 \

\b accelY
\b0 \

\b accelZ
\b0 \
\
Returns the bus indexes for the x,y & z accelerometer data\
\
// use x & y values\
a = \{ SinOsc.ar( [ 200*In.kr(x.accelX,1), 400*In.kr(x.accelY,1) ] )\}.play;\
a.free;\
a = \{SinOsc.ar(440)*In.kr(x.layer1(0),1)\}.play;\
a.free;\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\f0\fs18 \cf0 \
\
\
\
\
( // some synthdefs to play with\
SynthDef("TouchOSC-Sines",\{ arg freq, faderbus, togglebus;\
var sines, fader, toggle, vol;\
sines = Pan2.ar(SinOsc.ar(freq, mul:Pulse.ar(9.6,0.1)),Lag.kr(LFNoise0.kr(1),0.5));\
fader = In.kr(faderbus,1);\
toggle = In.kr(togglebus,1);\
vol = fader*toggle;\
Out.ar(0, sines*vol);\
\}).send(s);\
\
SynthDef("TouchOSC-Raw",\{ arg freq, faderbus, pushbus;\
var sounds, fader, push, vol, freqs;\
freqs = [freq,freq/2,freq/4];\
sounds = Mix.new([SinOsc.ar(freqs),LFTri.ar(freqs)]);\
fader = In.kr(faderbus,1);\
push = In.kr(pushbus,1);\
vol = fader*push;\
Out.ar(0, sounds*vol);\
\}).send(s);\
\
SynthDef("TouchOSC-Dust",\{ arg xybus;\
var dust, freq, vol;\
vol = In.kr(xybus,1);\
freq = In.kr(xybus+1,1);\
dust = Dust.ar(50*freq,vol);\
Out.ar(0, dust);\
\}).send(s);\
)\
\
( // create the Synths\
a = [\
// controlled by 1st fader and toggle\
Synth("TouchOSC-Sines",[\\freq,220,\\faderbus,x.layer1(1),\\togglebus,x.layer1(5)]),\
// controlled by 2nd fader and toggle\
Synth("TouchOSC-Sines",[\\freq,440,\\faderbus,x.layer1(2),\\togglebus,x.layer1(6)]),\
// controlled by 3rd fader and toggle\
Synth("TouchOSC-Sines",[\\freq,880,\\faderbus,x.layer1(3),\\togglebus,x.layer1(7)]),\
// controlled by 4th fader and 1st push\
Synth("TouchOSC-Raw",[\\freq,110,\\faderbus,x.layer1(4),\\pushbus,x.layer1(8)]),\
// controlled by 4th fader and 2nd push\
Synth("TouchOSC-Raw",[\\freq,123,\\faderbus,x.layer1(4),\\pushbus,x.layer1(9)]),\
// controlled by 4th fader and 3rd push\
Synth("TouchOSC-Raw",[\\freq,131,\\faderbus,x.layer1(4),\\pushbus,x.layer1(10)]),\
// controlled by 4th fader and 4th push\
Synth("TouchOSC-Raw",[\\freq,147,\\faderbus,x.layer1(4),\\pushbus,x.layer1(11)]),\
// controlled by 4th fader and 5th push\
Synth("TouchOSC-Raw",[\\freq,165,\\faderbus,x.layer1(4),\\pushbus,x.layer1(12)]),\
// controlled by xy\
Synth("TouchOSC-Dust",[\\xybus,x.layer1(0)])];\
)\
\
// free synths\
a.do(\{arg item, i; item.free;\});\
// close connections\
x.disconnect;\
}