string>import time
tnow, tprev, count = 0, 0 ,0 

#define location and size of panels
p1startx, p1starty = 0.05701836,0.029045645
p1width,  p1height = 0.8993074,0.2738936

p2startx, p2starty = 0.08059502,0.2821577
p2width,  p2height = 0.85575455,0.029011093

p3startx, p3starty = 0.15311773,0.2987379
p3width,  p3height = 0.24082395,0.29414684

p4startx, p4starty = 0.054593027,0.48177728
p4width,  p4height = 0.2956456,0.48921168

def drawpanel( c,  pstartx,  pstarty,  pwidth,  pheight):
	stroke(c)
	strokeWeight(0.3)
	line( 
		random( pstartx*p.width, (pstartx+pwidth)*p.width) ,	
		random( pstarty*p.height, (pstarty+pheight)*p.height) ,	
		random(pstartx*p.width, (pstartx+pwidth)*p.width),
		random( pstarty*p.height, (pstarty+pheight)*p.height)
	)
################################################################
def setup():	 #exectuted only once at the beginning
	#size(540,800, p.OPENGL, None)
	#background(cRedBG)
	background(0)
	smooth()


cRedBG =  color(* Vector4(0.21176471, 0.02745098, 0.019607844, 1.0)*Vector4(255,255,255,random(30,90)))
cBlack =  color(* Vector4(0.19607843, 0.16862746, 0.1882353, 1.0)*Vector4(255,255,255,random(0,80)))
cOrange = color(* Vector4(0.9882353, 0.50980395, 0.16862746, 1.0)*Vector4(255,255,255,random(30,100)))
cWhite =  color(* Vector4(0.98039216, 0.24313726, 0.019607844, 1.0)*Vector4(255,255,255,random(60,160)))
cPink =   color(* Vector4(0.98039216, 0.38039216, 0.9098039, 1.0)*Vector4(255,255,255,128))

def draw(): # // run cycle: loops over and over (draws frames)
	
	for i in range(0.5241231*100):
		drawpanel(cRedBG, -0.1,-0.1,1.2,1.2)
		drawpanel(cOrange, p1startx,p1starty,p1width,p1height)
		drawpanel(cBlack,  p2startx,p2starty,p2width,p2height)
		drawpanel(cWhite,  p3startx,p3starty,p3width,p3height)
		drawpanel(cPink,   p4startx,p4starty,p4width,p4height)

	global count, tprev,tnow
	count = count +1
	tprev = tnow
	tnow = time.clock()
	#print "B: frame %d FPS: %f" % ( count, 1.0/(tnow - tprev))



_r = (setup, draw, None)

@p.onKeyPressed
def onKeyPressed():
	if (p.key == 's'):
		print "frame saved"
		saveFrame("frame-###.jpg")

#p.noLoop()
