string>
# Field boxes can talk about other boxes

# this finds all the boxes called "a box" and grabs the first one
theBox = _self.find["a box"][0]
print theBox

# now we have a box we can do things to it. Try executing these lines one at a time:
theBox.frame.x = 600 # move the box
theBox.name = "something else" # sets the name
theBox.name = "a box" # sets it back again

theBox.myVariable = 20 # sets an arbitrary property (see the properties tutorial)

theBox() # runs all the code in it

theBox.myVariable = 30  # sets the variable to something else
theBox() # and runs it again

# because "a box" is one of those boxes that you can option click, we can also write
theBox.begin() # starts the box as if we option clicked it
theBox.end() # and stops it again

# Advanced things -----------------------------------------

# find also takes regular expressions (e.g. wildcards)
boxes = _self.find["a."]

#while we used [0] in the first example above, find returns a magic Field auto-lifting list, so we can igore the fact that we have three boxes in 'boxes' and just write:
boxes.frame.x = 550 # sets all of them to be at 550
boxes.myVariable = 10
boxes()
boxes.begin()
boxes.end()

