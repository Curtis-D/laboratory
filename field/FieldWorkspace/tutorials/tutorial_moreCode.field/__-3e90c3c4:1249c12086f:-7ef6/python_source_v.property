string>from field.core.ui import MarkingMenuBuilder

# Properties often end up being ways to let you change Field's UI, here we define " a space menu"

# if you just execute this block here you'll get a marking menu with a single submenu
builder = MarkingMenuBuilder()

builder.marking("Fruit Options", "NW")
builder.subtitle("Even more Yummy Fruit")

def each():
	print "menu item selected"

# the funny \uXXXX characters are things selected from the OS X "character palette". They are "poor-mans' icons"
builder.add(u"\ua49f <b>Each</b>", each)
builder.add(u"\ua49f <b>Peach</b>", each)
builder.add(u"\ua49e <b>Pear</b>", each)
builder.add(u"\ua4ae <b>Plum</b> - <i>(really)</i>", each)
  
_self.spaceMenu_ = builder

# you can add more things to this

builder.newMenu("Veg", "S")
def veg():
	print "let's have some veg"

# this area of the marking menu doesn't have a sub menu, it just calls this function
builder.call(veg)

builder.newMenu("Cheese", "S")
def cheese():
	print "let's have some cheese"

# this area of the marking menu doesn't have a sub menu, it just calls this function
builder.add("cheese", lambda : 0)
builder.add("<b>cheese</b>", lambda : 0)
builder.add("<b>Cheese</b>", lambda : 0)
builder.add("<b>CHEESE</b>", lambda : 0)

# finally you need to note that none of this gets saved to disk Ñ just the code here. So if you want your menu to appear all the time (which is usually what you'd like to do) you need to make sure that this code gets run when Field opens this document. See the "I run automatically" box for the trick

